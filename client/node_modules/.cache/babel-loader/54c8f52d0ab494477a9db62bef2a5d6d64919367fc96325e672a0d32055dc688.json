{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\memorie app\\\\client\\\\src\\\\components\\\\folder1\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport useStyles from './styles';\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  var _user$result3;\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p.id === currentId) : null); //tjib seulement lpost a editer\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      var _user$result;\n      dispatch(createPost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n      dispatch(updatePost({\n        ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create your own memories and like other's memories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 8\n  }, this);\n};\n_s(Form, \"wcx3a5Iwgvdd9cFTFwaoNtehAdU=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useStyles","createPost","updatePost","useSelector","jsxDEV","_jsxDEV","Form","_ref","_s","_user$result3","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","id","classes","user","JSON","parse","localStorage","getItem","dispatch","handleSubmit","e","preventDefault","_user$result","name","result","clear","_user$result2","creator","className","paper","children","variant","align","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","noValidate","root","form","onSubmit","label","fullWidth","value","onChange","target","multiline","rows","split","fileInput","type","multiple","onDone","_ref2","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/memorie app/client/src/components/folder1/Form.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\n\r\nimport { TextField,Button,Typography,Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\nimport {useDispatch } from \"react-redux\";\r\nimport useStyles from './styles';\r\nimport { createPost,updatePost } from \"../../actions/posts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n    \r\nconst Form=({currentId,setCurrentId})=>{\r\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\r\n    const post =useSelector((state)=> currentId ? state.posts.find((p)=>p.id===currentId):null);//tjib seulement lpost a editer\r\n   const classes=useStyles();\r\n   const user = JSON.parse(localStorage.getItem('profile'));\r\n   const dispatch=useDispatch();\r\n\r\nconst handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    if (currentId === 0) {\r\n        dispatch(createPost({ ...postData, name: user?.result?.name }));\r\n        clear();\r\n      } else {\r\n        dispatch(updatePost( { ...postData, name: user?.result?.name }));\r\n        clear();\r\n      }\r\n    };\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n      }, [post]);\r\n    \r\n\r\n\r\n    const clear =()=>{\r\n        setCurrentId(0);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n      };\r\n\r\n\r\n      if (!user?.result?.name) {\r\n        return (\r\n          <Paper className={classes.paper}>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Please Sign In to create your own memories and like other's memories.\r\n            </Typography>\r\n          </Paper>\r\n        );\r\n      }\r\n    \r\n\r\n    \r\n    \r\n    return(\r\n       <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n        \r\n        \r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n          <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n\r\n\r\n\r\n        \r\n        </form>\r\n       </Paper>\r\n    );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}